{
  "version": "2",
  "templates": [
    {
      "type": 1,
      "title": "AdGuard Home",
      "description": "AdGuard Home is a network-wide software for blocking ads & tracking.",
      "image": "adguard/adguardhome:latest",
      "name": "adguard-home",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/rpi-hosted/main/images/adguard-home.png",
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/AdGuardHome/work",
          "container": "/opt/adguardhome/work"
        },
        {
          "bind": "/portainer/Files/AppData/Config/AdGuardHome/conf",
          "container": "/opt/adguardhome/conf"
        }
      ],
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "80:80/tcp",
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "note": "See the documentation here https://hub.docker.com/r/adguard/adguardhome.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "Homer",
      "description": "A dead simple static HOMepage for your servER to keep your services on hand, from a simple yaml configuration file.",
      "image": "b4bz/homer:latest",
      "name": "homer",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/homer.png",
      "command": "",
      "env": [
        {
          "name": "GID",
          "label": "GID",
          "description": "",
          "default": "1000"
        },
        {
          "name": "UID",
          "label": "UID",
          "description": "",
          "default": "1000"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Homer/assets",
          "container": "/www/assets"
        },
        {
          "bind": "/portainer/Files/AppData/Config/Homer",
          "container": "/www/config.yml"
        }
      ],
      "ports": [
        "8902:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "note": "This container requires a yml file within the config volume. See the documentation here https://github.com/bastienwirtz/homer.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "Mailhog",
      "description": "MailHog is an email testing tool for developers.",
      "image": "cd2team/mailhog:latest",
      "name": "mailhog",
      "logo": "",
      "ports": [
        "1025:1025/tcp",
        "8025:8025/tcp"
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "note": "See the documentation here https://github.com/mailhog/MailHog.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "MiniDLNA",
      "description": "The MiniDNLA daemon serves media files (music, pictures, and video) to clients on a network.",
      "image": "vladgh/minidlna:latest",
      "name": "minidlna",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/minidlna.png",
      "network": "host",
      "volumes": [
        {
          "bind": "/portainer/Files/Media",
          "container": "/media"
        }
      ],
      "env": [
        {
          "name": "MINIDLNA_FRIENDLY_NAME",
          "label": "MINIDLNA_FRIENDLY_NAME",
          "description": "",
          "default": "MyMini"
        },
        {
          "name": "MINIDLNA_MAX_CONNECTIONS",
          "label": "MINIDLNA_MAX_CONNECTIONS",
          "description": "",
          "default": "10"
        },
        {
          "name": "MINIDLNA_MEDIA_DIR",
          "label": "MINIDLNA_MEDIA_DIR",
          "description": "",
          "default": "/media"
        },
        {
          "name": "MINIDLNA_ROOT_CONTAINER",
          "label": "MINIDLNA_ROOT_CONTAINER",
          "description": "",
          "default": "."
        }
      ],
      "restart_policy": "unless-stopped",
      "note": "This container requires a yml file within the config volume. See the documentation here https://hub.docker.com/r/vladgh/minidlna and configuration options here https://manpages.ubuntu.com/manpages/xenial/man5/minidlna.conf.5.html.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "NFS server",
      "description": "",
      "image": "itsthenetwork/nfs-server-alpine:latest",
      "name": "nfs-server",
      "logo": "",
      "volumes": [
        {
          "bind": "/portainer/Files/NFS",
          "container": "/nfsshare"
        }
      ],
      "env": [
        {
          "name": "SHARED_DIRECTORY",
          "label": "SHARED_DIRECTORY",
          "description": "",
          "default": "/nfsshare"
        }
      ],
      "restart_policy": "unless-stopped",
      "note": "",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "Pi-Hole",
      "description": "The Pi-holeÂ® is a DNS sinkhole that protects your devices from unwanted content without installing any client-side software.",
      "image": "pihole/pihole:latest",
      "name": "pi-hole",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/pi-hole.png",
      "command": "",
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/PiHole",
          "container": "/etc/pihole"
        },
        {
          "bind": "/portainer/Files/AppData/Config/PiHole/DNS",
          "container": "/etc/dnsmasq.d"
        }
      ],
      "ports": [
        "53:53/tcp",
        "53:53/udp",
        "67:67/udp",
        "1010:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "note": "See the documentation here https://github.com/pi-hole/pi-hole.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "Samba",
      "description": "Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.",
      "image": "dperson/samba:latest",
      "name": "samba",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/samba.png",
      "command": "",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "1000",
          "label": "USERID",
          "name": "USERID"
        },
        {
          "default": "1000",
          "label": "GROUPID",
          "name": "GROUPID"
        },
        {
          "default": "guest;guest",
          "label": "USER",
          "name": "USER"
        },
        {
          "default": "true",
          "label": "PERMISSIONS",
          "name": "PERMISSIONS"
        },
        {
          "default": "portainer;/share;yes;no;yes;guest",
          "label": "SHARE",
          "name": "SHARE"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Downloads",
          "container": "/share"
        }
      ],
      "ports": [
        "139:139/tcp",
        "445:445/tcp"
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "note": "See the documentation here https://github.com/dperson/samba.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "Transmission",
      "description": "Transmission is a cross-platform BitTorrent client.",
      "image": "linuxserver/transmission:latest",
      "name": "transmission",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/transmission.png",
      "env": [
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Transmission",
          "container": "/config"
        },
        {
          "bind": "/portainer/Files/Downloads",
          "container": "/downloads"
        },
        {
          "container": "/watch"
        }
      ],
      "ports": [
        "9091:9091/tcp",
        "51413:51413/tcp"
      ],
      "restart_policy": "unless-stopped",
      "note": "See the documentation here https://github.com/transmission/transmission.",
      "platform": "linux",
      "categories": [
        "Tools"
      ]
    },
    {
      "type": 1,
      "title": "Redmine",
      "description": "Open-source project management tool",
      "image": "redmine:latest",
      "name": "redmone",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/rpi-hosted/main/images/redmine.png",
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Redmine/files",
          "container":"/usr/src/redmine/files"
        }
      ],
      "ports": [
        "3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "note": "Default user and password are admin/admin. See the documentation here https://redmine.org/.",
      "platform": "linux",
      "categories": [
        "Project Management"
      ]
    },
    {
      "type": 1,
      "title": "Homebridge",
      "description": "Homebridge allows you to integrate with smart home devices that do not natively support HomeKit. There are over 2,000 Homebridge plugins supporting thousands of different smart accessories.",
      "image": "oznu/homebridge:latest",
      "name": "homebridge",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/homebridge.png",
      "env": [
        {
          "default": "1000",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "1000",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "1",
          "label": "HOMEBRIDGE_CONFIG_UI",
          "name": "HOMEBRIDGE_CONFIG_UI"
        },
        {
          "default": "8581",
          "label": "HOMEBRIDGE_CONFIG_UI_PORT",
          "name": "HOMEBRIDGE_CONFIG_UI_PORT"
        },
        {
          "default": "Europe/Budapest",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "network": "host",
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/homebridge",
          "container": "/homebridge"
        }
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "note": "Bringing HomeKit support where there is none.",
      "platform": "linux",
      "categories": [
        "Smart Home"
      ]
    },
    {
      "type": 1,
      "title": "Minecraft Server",
      "description": "This docker image provides a Minecraft Server that will automatically download the latest stable version at startup. You can also run/upgrade to any specific version or the latest snapshot. See the Versions section below for more information.",
      "image": "itzg/minecraft-server:latest",
      "name": "minecraft-server",
      "logo": "https://raw.githubusercontent.com/norbertgoltl/install-docker-and-portainer-on-raspberry-pi/main/images/minecraft.png",
      "env": [
        {
          "label": "EULA",
          "name": "EULA",
          "default": "TRUE"
        }
      ],
      "volumes": [
        {
          "bind": "/portainer/Files/AppData/Config/Minecraft-data",
          "container": "/data"
        }
      ],
      "ports": [
        "25565:25565/tcp"
      ],
      "restart_polocy": "no",
      "note": "See the documentation here https://github.com/itzg/docker-minecraft-server.",
      "platform": "linux",
      "categories": [
        "Games"
      ]
    }
  ]
}